apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: ${name}
  namespace: istio-system
spec:
  workloadSelector:
    labels:
      app.kubernetes.io/name: ${app_name}
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
            subFilter:
              name: envoy.filters.http.jwt_authn
    patch:
      operation: INSERT_BEFORE
      value:
       name: envoy.filters.http.oauth2
       typed_config:
         "@type": type.googleapis.com/envoy.extensions.filters.http.oauth2.v3.OAuth2
         config:
          token_endpoint:
            cluster: outbound|80||keycloak-http.keycloak.svc.cluster.local
            uri: ${token_endpoint}
            timeout: 3s
          authorization_endpoint: ${auth_endpoint}
          redirect_uri: "%REQ(x-forwarded-proto)%://%REQ(:authority)%/callback"
          redirect_path_matcher:
            path:
              exact: /callback
          signout_path:
            path:
              exact: /signout
          credentials:
            client_id: ${client_id}
            token_secret:
              name: token
              sds_config:
                path: "/etc/istio/config/oauth2/token-secret.yaml"
            hmac_secret:
              name: hmac
              sds_config:
                path: "/etc/istio/config/oauth2/hmac-secret.yaml"
          pass_through_matcher:
            - name: authorization
              prefix_match: Bearer
          auth_scopes:
            - profile
            - openid
            - email
          forward_bearer_token: true